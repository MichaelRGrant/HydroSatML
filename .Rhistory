}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
print(i)
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
writeRaster(trimmed, filename = finalname, format = 'ascii')
}
raster(ndrefiles[46])
raster(ndrefiles[47])
r <- raster(x = ndrefiles[46])
mask(r, shape)
ndrefiles[46]
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
mask(r, shape)
plot(shape)
plot(shape, axes=T)
plot(raster(ndrefiles[46]))
ndrefiles[46]
raster(ndrefiles[46])
plot(raster(ndrefiles[46]))
for(i in 46:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
print(i)
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
print(i)
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
writeRaster(trimmed, filename = finalname, format = 'ascii')
}
unique(ndrefiles)
plot(raster(ndrefiles[46]))
plot(raster(ndrefiles[141]))
for(i in 141:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
print(i)
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
print(i)
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
for(i in 141:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
print(i)
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
print(i)
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
for(i in 141:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
for(i in 141:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print('')
print('')
print(finalname)
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
for(i in 141:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
print(' ')
print(' ')
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
length(list.files(path = '/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/'))
for(i in 202:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(e)
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
print(' ')
print(' ')
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
for(i in 122:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
}, error = function(e) {
print(e)
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
print(' ')
print(' ')
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}
plot(raster(ndrefiles[122])
)
points(x = 466411.155, y = 5182376.04)
points(517223.717, 5169185.368)
points(513138.2963,	5150950.814)
r <- raster(ndrefiles[122])
mask(r, shape)
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
plot(mask(r, shape))
for(i in 122:length(ndrefiles)){
print(i)
name <- str_extract(ndrefiles[i], '[^\\/]+$')
filename <- str_extract(ndrefiles[i], '[^\\/][^\\/]*$')
location <- str_extract(filename, '^[^_]*')
if(location == 'Aes'){
shpfile <- str_extract(shpfiles[1], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[1], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'J'){
shpfile <- str_extract(shpfiles[2], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[2], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'Od'){
shpfile <- str_extract(shpfiles[3], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[3], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
else if(location == 'W'){
shpfile <- str_extract(shpfiles[4], '[^\\/][^\\/]*$')
shpfile <- str_extract(shpfile, '.*(?=\\.)')
shpfile_path <- str_extract(shpfiles[4], '^(.*[\\/])')
shape <- readOGR(shpfile_path, shpfile)
}
tryCatch({
r <- raster(x = ndrefiles[i])
masked <- mask(r, shape)
}, error = function(e) {
print(e)
print(paste0('Error on number: ', i))
})
tryCatch({
trimmed <- trim(masked)
plot(trimmed)
path <- "/Users/mgrant/MS_Data_Science/Capstone/data/trimmed_ndre/"
finalname <- paste0(path, name)
print(finalname)
print(' ')
print(' ')
writeRaster(trimmed, filename = finalname, format = 'ascii', overwrite=T)
}, error = function(e) {
print(e)
print(paste0('Number ', i, ' error.'))
# error_log[e.num] <- 'testing'
# e.num = e.num + 1
} )
}
